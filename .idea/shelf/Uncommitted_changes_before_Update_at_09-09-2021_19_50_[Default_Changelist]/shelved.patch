Index: app/src/main/java/com/ab/hicarerun/activities/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ab.hicarerun.activities;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlarmManager;\r\nimport android.app.AlertDialog;\r\nimport android.app.PendingIntent;\r\nimport android.app.ProgressDialog;\r\nimport android.app.assist.AssistContent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.AssetFileDescriptor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.graphics.drawable.LayerDrawable;\r\nimport android.hardware.camera2.CameraAccessException;\r\nimport android.hardware.camera2.CameraManager;\r\nimport android.location.Location;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.animation.AccelerateDecelerateInterpolator;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.LinearInterpolator;\r\nimport android.view.animation.TranslateAnimation;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.ab.hicarerun.BaseActivity;\r\nimport com.ab.hicarerun.BaseApplication;\r\nimport com.ab.hicarerun.R;\r\nimport com.ab.hicarerun.databinding.ActivityHomeBinding;\r\nimport com.ab.hicarerun.fragments.AttendanceViewFragment;\r\nimport com.ab.hicarerun.fragments.BazaarFragment;\r\nimport com.ab.hicarerun.fragments.HomeFragment;\r\nimport com.ab.hicarerun.fragments.IncentiveFragment;\r\nimport com.ab.hicarerun.fragments.LeaderBoardFragment;\r\nimport com.ab.hicarerun.fragments.NotificationFragment;\r\nimport com.ab.hicarerun.fragments.OffersFragment;\r\nimport com.ab.hicarerun.fragments.TechIdFragment;\r\nimport com.ab.hicarerun.fragments.VoucherFragment;\r\nimport com.ab.hicarerun.network.NetworkCallController;\r\nimport com.ab.hicarerun.network.NetworkResponseListner;\r\nimport com.ab.hicarerun.network.models.HandShakeModel.HandShake;\r\nimport com.ab.hicarerun.network.models.IncentiveModel.Incentive;\r\nimport com.ab.hicarerun.network.models.IncentiveModel.IncentiveData;\r\nimport com.ab.hicarerun.network.models.KarmaModel.Karma;\r\nimport com.ab.hicarerun.network.models.LoginResponse;\r\nimport com.ab.hicarerun.network.models.LogoutResponse;\r\nimport com.ab.hicarerun.network.models.ProductCartModel.ProductCart;\r\nimport com.ab.hicarerun.network.models.ProfileModel.Profile;\r\nimport com.ab.hicarerun.service.LocationManager;\r\nimport com.ab.hicarerun.service.ServiceLocationSend;\r\nimport com.ab.hicarerun.service.listner.LocationManagerListner;\r\nimport com.ab.hicarerun.utils.AppUtils;\r\nimport com.ab.hicarerun.utils.CustomBottomNavigation;\r\nimport com.ab.hicarerun.utils.GPSUtils;\r\nimport com.ab.hicarerun.utils.HandShakeReceiver;\r\nimport com.ab.hicarerun.utils.LocaleHelper;\r\nimport com.ab.hicarerun.utils.SharedPreferencesUtility;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.luseen.spacenavigation.SpaceItem;\r\nimport com.luseen.spacenavigation.SpaceOnClickListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.Serializable;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport io.realm.RealmResults;\r\n\r\nimport static com.ab.hicarerun.BaseApplication.getRealm;\r\n\r\n\r\npublic class HomeActivity extends BaseActivity implements FragmentManager.OnBackStackChangedListener, LocationManagerListner {\r\n    ActivityHomeBinding mActivityHomeBinding;\r\n\r\n    private static final int LOGOUT_REQ = 1000;\r\n    private static final int UPDATE_REQ = 2000;\r\n    private static final int REQ_PROFILE = 3000;\r\n    private static final int REQ_INCENTIVE = 4000;\r\n    private static final int REQ_KARMA = 5000;\r\n    private static int VIDEO_REQUEST = 100;\r\n    private Location mLocation;\r\n    private LocationManagerListner mListner;\r\n    public static final String ARG_HANDSHAKE = \"ARG_HANDSHAKE\";\r\n    public static final String ARG_EVENT = \"ARG_EVENT\";\r\n    public static final String ARG_USER = \"ARG_USER\";\r\n    RealmResults<LoginResponse> LoginRealmModels = null;\r\n    List<HandShake> items = null;\r\n    boolean isClicked = false;\r\n    String userName = \"\";\r\n    String userId = \"\";\r\n    int value = 0;\r\n    private boolean isGPS = false;\r\n    private android.location.LocationManager locationManager;\r\n    private AlarmManager mAlarmManager = null;\r\n    private PendingIntent pendingUpdateIntent = null;\r\n    private Bitmap bitUser = null;\r\n    //    private byte[] userByte = null;\r\n    private ProgressDialog progress;\r\n    private CameraManager mCameraManager;\r\n    private String mCameraId;\r\n\r\n    @Override\r\n    public void onSaveInstanceState(@NonNull Bundle outState) {\r\n        try {\r\n            super.onSaveInstanceState(outState);\r\n            //  mActivityHomeBinding.bottomNavigation.onSaveInstanceState(outState);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void attachBaseContext(Context base) {\r\n        try {\r\n            super.attachBaseContext(LocaleHelper.onAttach(base, LocaleHelper.getLanguage(base)));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mActivityHomeBinding =\r\n                DataBindingUtil.setContentView(this, R.layout.activity_home);\r\n//        setSupportActionBar(mActivityHomeBinding.toolbar);\r\n        progress = new ProgressDialog(this, R.style.TransparentProgressDialog);\r\n        progress.setCancelable(false);\r\n        mCameraManager = (CameraManager) getSystemService(Context.CAMERA_SERVICE);\r\n        try {\r\n            mCameraId = mCameraManager.getCameraIdList()[0];\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n        /*try {\r\n            if (!Build.MODEL.contains(\"Emulator\")){\r\n                mCameraManager.setTorchMode(mCameraId, false);\r\n            }\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }*/\r\n        AppUtils.IS_FLASH_ON = true;\r\n        mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_off);\r\n        mActivityHomeBinding.toolbar.lnrDrawer.setOnClickListener(view -> mActivityHomeBinding.drawer.openDrawer(GravityCompat.START));\r\n        try {\r\n            new GPSUtils(this).turnGPSOn(isGPSEnable -> {\r\n                // turn on GPS\r\n                if (isGPSEnable) {\r\n                    try {\r\n                        progress.show();\r\n                        getServiceCalled();\r\n                        getTechDeails();\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n//                    getIncentiveDetails();\r\n                } else {\r\n                    isGPS = isGPSEnable;\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n//        }\r\n\r\n//        CustomBottomNavigation curvedBottomNavigationView = findViewById(R.id.customBottomBar);\r\n//        curvedBottomNavigationView.inflateMenu(R.menu.bottom_navigation_menu);\r\n\r\n        Typeface typeface = Typeface.createFromAsset(getAssets(), \"fonts/Superhero.ttf\");\r\n        mActivityHomeBinding.toolbar.txtLifeCount.setTypeface(typeface);\r\n        mActivityHomeBinding.toolbar.txtRemLife.setTypeface(typeface);\r\n        mActivityHomeBinding.toolbar.txtLife.setTypeface(typeface);\r\n        mActivityHomeBinding.toolbar.lnrUser.setOnClickListener(view -> startActivity(new Intent(HomeActivity.this, TechIdActivity.class).putExtra(HomeActivity.ARG_EVENT, false)));\r\n        mActivityHomeBinding.toolbar.lnrWallet.setOnClickListener(view -> startActivity(new Intent(HomeActivity.this, IncentivesActivity.class).putExtra(HomeActivity.ARG_EVENT, false)));\r\n        mActivityHomeBinding.toolbar.lnrKarma.setOnClickListener(view -> startActivity(new Intent(HomeActivity.this, KarmaActivity.class).putExtra(HomeActivity.ARG_EVENT, false)));\r\n        mActivityHomeBinding.toolbar.lnrVideo.setOnClickListener(v -> {\r\n            Intent videoIntent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);\r\n            if (videoIntent.resolveActivity(getPackageManager()) != null) {\r\n                startActivityForResult(videoIntent, VIDEO_REQUEST);\r\n            }\r\n        });\r\n        mActivityHomeBinding.toolbar.lnrFlash.setOnClickListener(v -> {\r\n            try {\r\n                if (AppUtils.IS_FLASH_ON) {\r\n                    mCameraManager.setTorchMode(mCameraId, true);\r\n                    AppUtils.IS_FLASH_ON = false;\r\n                    mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_on);\r\n                } else {\r\n                    mCameraManager.setTorchMode(mCameraId, false);\r\n                    AppUtils.IS_FLASH_ON = true;\r\n                    mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_off);\r\n                }\r\n\r\n            } catch (CameraAccessException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        try {\r\n            isClicked = Objects.requireNonNull(getIntent().getExtras()).getBoolean(ARG_EVENT, false);\r\n            LoginRealmModels =\r\n                    BaseApplication.getRealm().where(LoginResponse.class).findAll();\r\n            if (LoginRealmModels != null && LoginRealmModels.size() > 0) {\r\n                LocationManager.Builder builder = new LocationManager.Builder(this);\r\n                builder.setLocationListner(this);\r\n                builder.build();\r\n                userId = Objects.requireNonNull(LoginRealmModels.get(0)).getUserID();\r\n                SharedPreferencesUtility.savePrefString(HomeActivity.this, SharedPreferencesUtility.PREF_USERID, userId);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        mActivityHomeBinding.bottomNavigation.initWithSaveInstanceState(savedInstanceState);\r\n\r\n        mActivityHomeBinding.bottomNavigation.addSpaceItem(new SpaceItem(\"Home\", R.drawable.ic_home));\r\n        mActivityHomeBinding.bottomNavigation.addSpaceItem(new SpaceItem(\"Incentives\", R.drawable.ic_rupees));\r\n        mActivityHomeBinding.bottomNavigation.addSpaceItem(new SpaceItem(\"Attendance\", R.drawable.ic_icon));\r\n        mActivityHomeBinding.bottomNavigation.addSpaceItem(new SpaceItem(\"ID Card\", R.drawable.ic__avatar_user));\r\n        mActivityHomeBinding.bottomNavigation.hideAllBadges();\r\n        mActivityHomeBinding.fab.bringToFront();\r\n        mActivityHomeBinding.relCoin.setOnClickListener(view -> startActivity(new Intent(HomeActivity.this, OfferActivity.class)));\r\n\r\n        handleIntent(getIntent());\r\n        getResourcesKarma();\r\n    }\r\n\r\n    private void getResourcesKarma() {\r\n        try {\r\n            LoginRealmModels =\r\n                    BaseApplication.getRealm().where(LoginResponse.class).findAll();\r\n            if (LoginRealmModels != null && LoginRealmModels.size() > 0) {\r\n                userId = Objects.requireNonNull(LoginRealmModels.get(0)).getUserID();\r\n                NetworkCallController controller = new NetworkCallController();\r\n                controller.setListner(new NetworkResponseListner<Karma>() {\r\n                    @Override\r\n                    public void onResponse(int requestCode, Karma response) {\r\n                        try {\r\n                            if (response != null) {\r\n                                mActivityHomeBinding.toolbar.lnrKarma.setVisibility(View.VISIBLE);\r\n                                int progress = response.getTotalPointsPending();\r\n                                Drawable batteryProgressD = mActivityHomeBinding.toolbar.progressBar.getProgressDrawable();\r\n                                batteryProgressD.setLevel(progress * 100);\r\n                                mActivityHomeBinding.toolbar.progressBar.setProgress(progress);\r\n                                mActivityHomeBinding.toolbar.txtRemLife.setText(String.valueOf(response.getTotalPointsPending()) + \"/\" + String.valueOf(response.getTotalPoints()));\r\n                                mActivityHomeBinding.toolbar.txtLifeCount.setText(String.valueOf(response.getLifeLineIndex()));\r\n                            } else {\r\n                                mActivityHomeBinding.toolbar.lnrKarma.setVisibility(View.GONE);\r\n                            }\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(int requestCode) {\r\n\r\n                    }\r\n                });\r\n                controller.getKarmaResources(REQ_KARMA, userId);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void setupNavigationView() {\r\n        try {\r\n            if (mActivityHomeBinding.bottomNavigation != null) {\r\n                // Select first menu item by default and show Fragment accordingly.\r\n                Menu menu = mActivityHomeBinding.customNavigation.getMenu();\r\n                selectFragment(menu.getItem(0));\r\n                mActivityHomeBinding.customNavigation.setOnNavigationItemSelectedListener(menuItem -> {\r\n                    selectFragment(menuItem);\r\n                    return false;\r\n                });\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onProvideAssistContent(AssistContent outContent) {\r\n        super.onProvideAssistContent(outContent);\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            try {\r\n                outContent.setStructuredData((new JSONObject())\r\n                        .put(\"@type\", \"ExerciseObservation\")\r\n                        .put(\"name\", \"My last runs\")\r\n                        .put(\"url\", \"https://fit-actions.firebaseapp.com/stats\")\r\n                        .toString());\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void selectFragment(MenuItem item) {\r\n        try {\r\n            item.setChecked(true);\r\n            switch (item.getItemId()) {\r\n                case R.id.nav_home:\r\n                    replaceFragment(HomeFragment.newInstance(/*userByte*/), \"HOME\");\r\n                    break;\r\n                case R.id.nav_incentive:\r\n                    replaceFragment(IncentiveFragment.newInstance(), \"INCENTIVE\");\r\n                    break;\r\n                case R.id.nav_bazaar:\r\n                    replaceFragment(BazaarFragment.newInstance(), \"BAZAAR\");\r\n                    break;\r\n                case R.id.nav_rewards:\r\n//                replaceFragment(VoucherFragment.newInstance(), \"HomeActivity-NotificationFragment\");\r\n                    break;\r\n                case R.id.nav_attendance:\r\n                    replaceFragment(AttendanceViewFragment.newInstance(), \"ATTENDANCE\");\r\n                    break;\r\n                case R.id.nav_leader:\r\n                    startActivity(new Intent(HomeActivity.this, LeaderBoardActivity.class));\r\n                    break;\r\n\r\n                case R.id.nav_language:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    showLanguageDialog();\r\n                    break;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void showLanguageDialog() {\r\n        try {\r\n\r\n            LayoutInflater li = LayoutInflater.from(HomeActivity.this);\r\n            View promptsView = li.inflate(R.layout.layout_language_dialog, null);\r\n            androidx.appcompat.app.AlertDialog.Builder alertDialogBuilder = new androidx.appcompat.app.AlertDialog.Builder(HomeActivity.this);\r\n            alertDialogBuilder.setView(promptsView);\r\n            final androidx.appcompat.app.AlertDialog alertDialog = alertDialogBuilder.create();\r\n            final CardView lanEnglish =\r\n                    promptsView.findViewById(R.id.lanEnglish);\r\n            final CardView lanHindi =\r\n                    promptsView.findViewById(R.id.lanHindi);\r\n            final CardView lanMarathi =\r\n                    promptsView.findViewById(R.id.lanMarathi);\r\n            final CardView lanGujrati =\r\n                    promptsView.findViewById(R.id.lanGujrati);\r\n            final CardView lanTamil =\r\n                    promptsView.findViewById(R.id.lanTamil);\r\n            final CardView lanTelugu =\r\n                    promptsView.findViewById(R.id.lanTelugu);\r\n            final CardView lanKannad =\r\n                    promptsView.findViewById(R.id.lanKannad);\r\n            final Button btnContinue = promptsView.findViewById(R.id.btnOk);\r\n\r\n\r\n            btnContinue.setOnClickListener(view -> alertDialog.dismiss());\r\n\r\n            lanEnglish.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"en\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n            lanHindi.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"hi\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n\r\n            lanMarathi.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"mr\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n            lanGujrati.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"gu\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n\r\n            lanTamil.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"ta\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n            lanTelugu.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"te\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n            lanKannad.setOnClickListener(view -> {\r\n                AppUtils.updateViews(\"kn\", HomeActivity.this);\r\n                alertDialog.dismiss();\r\n                recreate();\r\n            });\r\n\r\n\r\n            alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n            alertDialog.setCanceledOnTouchOutside(false);\r\n            alertDialog.show();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        try {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n            if (resultCode == Activity.RESULT_OK && requestCode == GPSUtils.GPS_REQUEST) {\r\n                try {\r\n                    isGPS = true; // flag maintain before get location\r\n                    progress.show();\r\n                    getServiceCalled();\r\n                    getTechDeails();\r\n                    getResourcesKarma();\r\n//                getIncentiveDetails();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            } else if (requestCode == VIDEO_REQUEST && resultCode == RESULT_OK) {\r\n                AssetFileDescriptor videoAsset = getContentResolver().openAssetFileDescriptor(data.getData(), \"r\");\r\n                FileInputStream fis = videoAsset.createInputStream();\r\n                File root = new File(Environment.getExternalStorageDirectory(), \"/InspectionVideo/\");  //you can replace RecordVideo by the specific folder where you want to save the video\r\n                if (!root.exists()) {\r\n                    System.out.println(\"No directory\");\r\n                    root.mkdirs();\r\n                }\r\n\r\n                File file;\r\n                file = new File(root, \"android_\" + System.currentTimeMillis() + \".mp4\");\r\n\r\n                FileOutputStream fos = new FileOutputStream(file);\r\n\r\n                byte[] buf = new byte[1024];\r\n                int len;\r\n                while ((len = fis.read(buf)) > 0) {\r\n                    fos.write(buf, 0, len);\r\n                }\r\n                fis.close();\r\n                fos.close();\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        try {\r\n            super.onResume();\r\n            if (AppUtils.checkConnection(HomeActivity.this)) {\r\n            } else {\r\n                AppUtils.showOkActionAlertBox(HomeActivity.this, \"Please check your internet connection!\", (dialogInterface, i) -> finish());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    private void getServiceCalled() {\r\n        try {\r\n            if (isClicked) {\r\n                try {\r\n                    userName = getIntent().getStringExtra(ARG_USER);\r\n                    SharedPreferencesUtility.savePrefString(HomeActivity.this, SharedPreferencesUtility.PREF_USERNAME, userName);\r\n                    items = (List<HandShake>) getIntent().getSerializableExtra(ARG_HANDSHAKE);\r\n                    assert items != null;\r\n                    value = Integer.parseInt(items.get(1).getValue());\r\n                    long REPEATED_TIME = 1000 * 60 * 6;\r\n                    SharedPreferencesUtility.savePrefString(HomeActivity.this, SharedPreferencesUtility.PREF_INTERVAL, String.valueOf(REPEATED_TIME));\r\n                    Log.i(\"callHandshake\", String.valueOf(REPEATED_TIME));\r\n                    SharedPreferencesUtility.savePrefString(HomeActivity.this, SharedPreferencesUtility.PREF_TIME, items.get(1).getValue());\r\n                    if (items.get(0).getText().equals(\"EnableTrace\")) {\r\n                        if (items.get(0).getValue().equals(\"true\")) {\r\n                            Intent intent = new Intent(getApplicationContext(), HandShakeReceiver.class);\r\n                            intent.setAction(\"HandshakeAction\");\r\n                            pendingUpdateIntent = PendingIntent.getBroadcast(getApplicationContext(),\r\n                                    0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n                            Calendar futureDate = Calendar.getInstance();\r\n                            mAlarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n\r\n                            if (android.os.Build.VERSION.SDK_INT >= 19) {\r\n                                mAlarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP, futureDate.getTime().getTime(), REPEATED_TIME, pendingUpdateIntent);\r\n                            } else {\r\n                                mAlarmManager.setRepeating(AlarmManager.RTC_WAKEUP, futureDate.getTime().getTime(), REPEATED_TIME, pendingUpdateIntent);\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            } else {\r\n                try {\r\n                    if (pendingUpdateIntent != null) {\r\n                        mAlarmManager.cancel(pendingUpdateIntent);\r\n                        getApplicationContext().stopService(new Intent(getApplicationContext(), ServiceLocationSend.class));\r\n                    }\r\n                    String time = SharedPreferencesUtility.getPrefString(HomeActivity.this, SharedPreferencesUtility.PREF_TIME);\r\n//                    if (time != null) {\r\n//                        Log.i(\"TIMEX\", time);\r\n//                        int t = Integer.parseInt(time);\r\n//                        value = t;\r\n//                    }\r\n                    long REPEATED_TIME = 1000 * 60 * 6;\r\n                    Intent intent = new Intent(getApplicationContext(), HandShakeReceiver.class);\r\n                    intent.setAction(\"HandshakeAction\");\r\n                    pendingUpdateIntent = PendingIntent.getBroadcast(getApplicationContext(),\r\n                            0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n                    Calendar futureDate = Calendar.getInstance();\r\n                    mAlarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n\r\n                    if (android.os.Build.VERSION.SDK_INT >= 19) {\r\n                        mAlarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP, futureDate.getTime().getTime(), REPEATED_TIME, pendingUpdateIntent);\r\n                    } else {\r\n                        mAlarmManager.setRepeating(AlarmManager.RTC_WAKEUP, futureDate.getTime().getTime(), REPEATED_TIME, pendingUpdateIntent);\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void getTechDeails() {\r\n        try {\r\n            RealmResults<LoginResponse> LoginRealmModels =\r\n                    BaseApplication.getRealm().where(LoginResponse.class).findAll();\r\n            assert LoginRealmModels.get(0) != null;\r\n            String userId = LoginRealmModels.get(0).getUserID();\r\n            if (LoginRealmModels != null && LoginRealmModels.size() > 0) {\r\n                NetworkCallController controller = new NetworkCallController();\r\n                controller.setListner(new NetworkResponseListner() {\r\n                    @Override\r\n                    public void onResponse(int requestCode, Object data) {\r\n                        progress.dismiss();\r\n                        if (data != null) {\r\n                            Profile response = (Profile) data;\r\n                            if (response.getProfilePic() != null) {\r\n                                String base64 = response.getProfilePic();\r\n                                byte[] decodedString = Base64.decode(base64, Base64.DEFAULT);\r\n                                Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n                                if (base64.length() > 0) {\r\n                                    mActivityHomeBinding.toolbar.imgUser.setImageBitmap(decodedByte);\r\n                                    bitUser = decodedByte;\r\n                                    ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        setupNavigationView();\r\n                        initNavigationDrawer();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(int requestCode) {\r\n                        progress.dismiss();\r\n                    }\r\n                });\r\n                controller.getTechnicianProfile(REQ_PROFILE, userId);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n//    private void getIncentiveDetails() {\r\n//        try {\r\n//            RealmResults<LoginResponse> LoginRealmModels =\r\n//                    BaseApplication.getRealm().where(LoginResponse.class).findAll();\r\n//            assert LoginRealmModels.get(0) != null;\r\n//            String userId = LoginRealmModels.get(0).getUserID();\r\n//            if (LoginRealmModels != null && LoginRealmModels.size() > 0) {\r\n//                NetworkCallController controller = new NetworkCallController();\r\n//                controller.setListner(new NetworkResponseListner() {\r\n//                    @Override\r\n//                    public void onResponse(int requestCode, Object data) {\r\n//                        IncentiveData response = (IncentiveData) data;\r\n//                        mActivityHomeBinding.toolbar.txtIncentive.setText(\"\\u20B9\" + \" \" + response.getTotalIncentiveAmount());\r\n//                    }\r\n//\r\n//                    @Overrideco\r\n//                    public void onFailure(int requestCode) {\r\n//\r\n//                    }\r\n//                });\r\n//                controller.getTechnicianIncentive(REQ_INCENTIVE, userId);\r\n//            }\r\n//        } catch (Exception e) {\r\n//            getLogout();\r\n//            e.printStackTrace();\r\n//        }\r\n//    }\r\n\r\n    public void initNavigationDrawer() {\r\n        NavigationView navigationView = (NavigationView) findViewById(R.id.navigation_view);\r\n        LoginRealmModels =\r\n                BaseApplication.getRealm().where(LoginResponse.class).findAll();\r\n        if (LoginRealmModels != null && LoginRealmModels.size() > 0) {\r\n            assert LoginRealmModels.get(0) != null;\r\n            String isTsEnable = LoginRealmModels.get(0).getIsTechnician();\r\n            Menu menu = navigationView.getMenu();\r\n            MenuItem groom = menu.findItem(R.id.nav_groom);\r\n            MenuItem jobCount = menu.findItem(R.id.nav_summary);\r\n            MenuItem routineCheck = menu.findItem(R.id.nav_routine);\r\n            MenuItem assignCode = menu.findItem(R.id.nav_tsScanner);\r\n            MenuItem tsVerify = menu.findItem(R.id.nav_tsVerfication);\r\n            if (isTsEnable.equals(\"0\")) {\r\n                groom.setVisible(true);\r\n                jobCount.setVisible(true);\r\n                routineCheck.setVisible(true);\r\n                assignCode.setVisible(true);\r\n                tsVerify.setVisible(true);\r\n\r\n            } else {\r\n                groom.setVisible(false);\r\n                jobCount.setVisible(false);\r\n                routineCheck.setVisible(false);\r\n                assignCode.setVisible(false);\r\n                tsVerify.setVisible(false);\r\n            }\r\n            PackageInfo pInfo = null;\r\n            try {\r\n                pInfo = getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            } catch (PackageManager.NameNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n            assert pInfo != null;\r\n            String mobileVersion = pInfo.versionName;\r\n            assert LoginRealmModels.get(0) != null;\r\n            String Uname = LoginRealmModels.get(0).getUserName();\r\n\r\n            View header = navigationView.getHeaderView(0);\r\n            TextView name = (TextView) header.findViewById(R.id.drawer_name);\r\n            TextView version = (TextView) header.findViewById(R.id.txtVersion);\r\n            ImageView imgUser = header.findViewById(R.id.navUser);\r\n            name.setText(\"Hi, \" + Uname);\r\n            version.setText(\"V \" + mobileVersion);\r\n            if (bitUser != null) {\r\n                imgUser.setImageBitmap(bitUser);\r\n            }\r\n            mActivityHomeBinding.navigationView.setCheckedItem(0);\r\n\r\n        }\r\n        navigationView.setNavigationItemSelectedListener(menuItem -> {\r\n            int id = menuItem.getItemId();\r\n            switch (id) {\r\n\r\n                case R.id.nav_home:\r\n//                    getSupportFragmentManager().beginTransaction().replace(mActivityHomeBinding.container.getId(), HomeFragment.newInstance()).addToBackStack(null).commit();\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    break;\r\n\r\n                case R.id.nav_quiz:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, ActivityQuizCategory.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_chat:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, AssessChatActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_products:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, HicareProductsActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_incentive:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, IncentivesActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_attendance:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, AttendanceActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_bazaar:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, BazaarActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_onsite:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, OnSiteTaskActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_groom:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TechnicianSeniorActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_routine:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TechnicianRoutineActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_kyc:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, KycActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_tsScanner:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TSScannerActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_tsVerfication:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TSVerificationActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_summary:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TechChemicalCountActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_notifications:\r\n                    getSupportFragmentManager().beginTransaction().replace(mActivityHomeBinding.container.getId(), NotificationFragment.newInstance()).addToBackStack(null).commit();\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    break;\r\n\r\n                case R.id.nav_training:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TrainingActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_voucher:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, VoucherActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n\r\n                case R.id.nav_help:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, HelpActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_myid:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    startActivity(new Intent(HomeActivity.this, TechIdActivity.class).putExtra(HomeActivity.ARG_EVENT, false));\r\n                    break;\r\n\r\n                case R.id.nav_language:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    showLanguageDialog();\r\n                    break;\r\n\r\n                case R.id.nav_logout:\r\n                    mActivityHomeBinding.drawer.closeDrawers();\r\n                    final AlertDialog.Builder dialog = new AlertDialog.Builder(HomeActivity.this);\r\n                    dialog.setTitle(getString(R.string.logout_exit));\r\n                    dialog.setMessage(getString(R.string.logout_do_you_really_want_to_exit));\r\n                    dialog.setPositiveButton(getString(R.string.yes), (dialogInterface, i) -> {\r\n                        dialogInterface.dismiss();\r\n                        getLogout();\r\n                    });\r\n                    dialog.setNegativeButton(getString(R.string.no), (dialogInterface, i) -> dialogInterface.dismiss());\r\n                    dialog.show();\r\n\r\n                    break;\r\n\r\n            }\r\n            return true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    protected void onNewIntent(Intent intent) {\r\n        super.onNewIntent(intent);\r\n        handleIntent(intent);\r\n    }\r\n\r\n    private void handleIntent(Intent intent) {\r\n        String appLinkAction = intent.getAction();\r\n        Uri appLinkData = intent.getData();\r\n        if (Intent.ACTION_VIEW.equals(appLinkAction) && appLinkData != null) {\r\n            String recipeId = appLinkData.getLastPathSegment();\r\n            Uri appData = Uri.parse(\"content://com.recipe_app/recipe/\").buildUpon()\r\n                    .appendPath(recipeId).build();\r\n            //     showRecipe(appData);\r\n        }\r\n    }\r\n\r\n\r\n    private void getLogout() {\r\n        try {\r\n            NetworkCallController controller = new NetworkCallController();\r\n            String UserId = SharedPreferencesUtility.getPrefString(HomeActivity.this, SharedPreferencesUtility.PREF_USERID);\r\n\r\n            controller.setListner(new NetworkResponseListner() {\r\n                @Override\r\n                public void onResponse(int requestCode, Object response) {\r\n                    LogoutResponse logres = (LogoutResponse) response;\r\n\r\n                    if (logres.getSuccess()) {\r\n                        if (pendingUpdateIntent != null) {\r\n                            mAlarmManager.cancel(pendingUpdateIntent);\r\n                            getApplicationContext().stopService(new Intent(getApplicationContext(), ServiceLocationSend.class));\r\n                        }\r\n                        SharedPreferencesUtility.savePrefBoolean(getApplicationContext(), SharedPreferencesUtility.IS_USER_LOGIN,\r\n                                false);\r\n                        SharedPreferencesUtility.savePrefBoolean(getApplicationContext(), SharedPreferencesUtility.IS_SKIP_VIDEO,\r\n                                false);\r\n                        startActivity(new Intent(getApplicationContext(), LoginActivity.class));\r\n                        finish();\r\n                    } else {\r\n                        Toast.makeText(HomeActivity.this, \"Logout failed! try again.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(int requestCode) {\r\n\r\n                }\r\n            });\r\n\r\n            controller.getLogout(LOGOUT_REQ, UserId, HomeActivity.this);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n//    @Override\r\n//    public boolean onPrepareOptionsMenu(Menu menu) {\r\n//        return super.onPrepareOptionsMenu(menu);\r\n//    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_matrix, menu);\r\n        //return true;\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try {\r\n            if (mActivityHomeBinding.customNavigation.getSelectedItemId() == R.id.nav_home || mActivityHomeBinding.customNavigation.getSelectedItemId() == R.id.nav_leader) {\r\n                mActivityHomeBinding.navigationView.setCheckedItem(0);\r\n                showExitAlert();\r\n            } else {\r\n                mActivityHomeBinding.customNavigation.setSelectedItemId(R.id.nav_home);\r\n                mActivityHomeBinding.navigationView.setCheckedItem(0);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void showExitAlert() {\r\n        final AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n        dialog.setTitle(getString(R.string.logout_exit));\r\n        dialog.setMessage(getString(R.string.logout_do_you_really_want_to_exit));\r\n        dialog.setPositiveButton(getString(R.string.yes), (dialogInterface, i) -> {\r\n            dialogInterface.dismiss();\r\n            finishAffinity();\r\n        });\r\n        dialog.setNegativeButton(getString(R.string.no), (dialogInterface, i) -> dialogInterface.dismiss());\r\n        dialog.show();\r\n    }\r\n\r\n    @Override\r\n    public void onBackStackChanged() {\r\n        int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\r\n//\r\n        try {\r\n            if (backStackEntryCount == 0) {\r\n                getSupportActionBar().setDisplayHomeAsUpEnabled(false);\r\n            } else {\r\n                getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n//        if( getSupportFragmentManager().getBackStackEntryCount() <= 1){\r\n//            // pop all the fragment and remove the listener\r\n//            getSupportFragmentManager().popBackStack(\"HOME\", POP_BACK_STACK_INCLUSIVE);\r\n//            getSupportFragmentManager().removeOnBackStackChangedListener(this);\r\n//            // set the home button selected\r\n//            mActivityHomeBinding.customNavigation.getMenu().getItem(0).setChecked(true);\r\n//        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void locationFetched(Location mLocation, Location oldLocation, String time, String locationProvider) {\r\n        this.mLocation = mLocation;\r\n        if (mListner != null) {\r\n            mListner.locationFetched(mLocation, oldLocation, time, locationProvider);\r\n        }\r\n    }\r\n\r\n    public Location getmLocation() {\r\n        return mLocation;\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        /*try {\r\n            mCameraManager.setTorchMode(mCameraId, false);\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }*/\r\n        AppUtils.IS_FLASH_ON = true;\r\n        mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_off);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ab/hicarerun/activities/HomeActivity.java	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ app/src/main/java/com/ab/hicarerun/activities/HomeActivity.java	(date 1631197033798)
@@ -14,6 +14,7 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Typeface;
+import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.LayerDrawable;
@@ -25,6 +26,7 @@
 import android.os.Bundle;
 
 import android.os.Environment;
+import android.os.StrictMode;
 import android.provider.MediaStore;
 import android.util.Base64;
 import android.util.Log;
@@ -43,6 +45,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.annotation.RequiresApi;
 import androidx.cardview.widget.CardView;
 import androidx.core.view.GravityCompat;
@@ -72,6 +75,7 @@
 import com.ab.hicarerun.network.models.KarmaModel.Karma;
 import com.ab.hicarerun.network.models.LoginResponse;
 import com.ab.hicarerun.network.models.LogoutResponse;
+import com.ab.hicarerun.network.models.MenuModel.MenuData;
 import com.ab.hicarerun.network.models.ProductCartModel.ProductCart;
 import com.ab.hicarerun.network.models.ProfileModel.Profile;
 import com.ab.hicarerun.service.LocationManager;
@@ -83,6 +87,9 @@
 import com.ab.hicarerun.utils.HandShakeReceiver;
 import com.ab.hicarerun.utils.LocaleHelper;
 import com.ab.hicarerun.utils.SharedPreferencesUtility;
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.request.target.SimpleTarget;
+import com.bumptech.glide.request.transition.Transition;
 import com.google.android.material.navigation.NavigationView;
 import com.luseen.spacenavigation.SpaceItem;
 import com.luseen.spacenavigation.SpaceOnClickListener;
@@ -96,7 +103,9 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
+import java.io.InputStream;
 import java.io.Serializable;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;
 import java.util.List;
@@ -136,6 +145,7 @@
     private ProgressDialog progress;
     private CameraManager mCameraManager;
     private String mCameraId;
+    private List<MenuData> menuData = null;
 
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState) {
@@ -171,13 +181,12 @@
         } catch (CameraAccessException e) {
             e.printStackTrace();
         }
-        /*try {
-            if (!Build.MODEL.contains("Emulator")){
-                mCameraManager.setTorchMode(mCameraId, false);
-            }
+        try {
+            mCameraManager.setTorchMode(mCameraId, false);
+
         } catch (CameraAccessException e) {
             e.printStackTrace();
-        }*/
+        }
         AppUtils.IS_FLASH_ON = true;
         mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_off);
         mActivityHomeBinding.toolbar.lnrDrawer.setOnClickListener(view -> mActivityHomeBinding.drawer.openDrawer(GravityCompat.START));
@@ -610,8 +619,10 @@
                             }
 
                         }
-                        setupNavigationView();
-                        initNavigationDrawer();
+//                        setupNavigationView();
+//                        initNavigationDrawer();
+                        getResourceMenu();
+
                     }
 
                     @Override
@@ -625,6 +636,111 @@
             e.printStackTrace();
         }
 
+    }
+
+    private void setDrawer() {
+        try {
+            NavigationView navigationView = (NavigationView) findViewById(R.id.navigation_view);
+            if (LoginRealmModels != null && LoginRealmModels.size() > 0) {
+                PackageInfo pInfo = null;
+                try {
+                    pInfo = getPackageManager().getPackageInfo(getPackageName(), 0);
+                } catch (PackageManager.NameNotFoundException e) {
+                    e.printStackTrace();
+                }
+                assert pInfo != null;
+                String mobileVersion = pInfo.versionName;
+                assert LoginRealmModels.get(0) != null;
+                String Uname = LoginRealmModels.get(0).getUserName();
+
+                View header = navigationView.getHeaderView(0);
+                TextView name = (TextView) header.findViewById(R.id.drawer_name);
+                TextView version = (TextView) header.findViewById(R.id.txtVersion);
+                ImageView imgUser = header.findViewById(R.id.navUser);
+                name.setText("Hi, " + Uname);
+                version.setText("V " + mobileVersion);
+                if (bitUser != null) {
+                    imgUser.setImageBitmap(bitUser);
+                }
+                mActivityHomeBinding.navigationView.setCheckedItem(0);
+
+            }
+
+            if (navigationView != null) {
+                Menu menuBottom = mActivityHomeBinding.customNavigation.getMenu();
+                selectFragment(menuBottom.getItem(0));
+                mActivityHomeBinding.customNavigation.setOnNavigationItemSelectedListener(menuItem -> {
+                    selectFragment(menuItem);
+                    return false;
+                });
+                Menu menu = navigationView.getMenu();
+                StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                StrictMode.setThreadPolicy(policy);
+                for (int i = 0; i < menuData.size(); i++) {
+                    menu.add(menuData.get(i).getTitle());
+                    MenuItem mi = menu.getItem(i);
+                    mi.setVisible(menuData.get(i).getIsVisible());
+                    Glide.with(this).asBitmap().load(menuData.get(i).getIcon()).into(new SimpleTarget<Bitmap>(100,100) {
+                        @Override
+                        public void onResourceReady(@NonNull @NotNull Bitmap resource, @Nullable @org.jetbrains.annotations.Nullable Transition<? super Bitmap> transition) {
+                            mi.setIcon(new BitmapDrawable(getResources(), resource));
+
+                        }
+
+                    });
+                }
+
+            }
+
+            NavigationView.OnNavigationItemSelectedListener item_click_listener = item -> {
+
+                for(int i=0; i< menuData.size(); i++){
+
+                    if (item.toString().equalsIgnoreCase("Home")) {
+                        getSupportFragmentManager().beginTransaction().replace(mActivityHomeBinding.container.getId(), HomeFragment.newInstance()).addToBackStack(null).commit();
+                        mActivityHomeBinding.drawer.closeDrawers();
+                    }else if(item.toString().equalsIgnoreCase("Quiz & Puzzle")){
+                        mActivityHomeBinding.drawer.closeDrawers();
+                        startActivity(new Intent(HomeActivity.this, ActivityQuizCategory.class).putExtra(HomeActivity.ARG_EVENT, false));
+                    }
+
+                }
+
+
+                mActivityHomeBinding.drawer.closeDrawers();
+                return true;
+            };
+
+            navigationView.setNavigationItemSelectedListener(item_click_listener);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private void getResourceMenu() {
+        try {
+
+
+            NetworkCallController controller = new NetworkCallController();
+            controller.setListner(new NetworkResponseListner<List<MenuData>>() {
+
+                @Override
+                public void onResponse(int requestCode, List<MenuData> response) {
+                    menuData = new ArrayList<>();
+                    menuData = response;
+                    setDrawer();
+                }
+
+                @Override
+                public void onFailure(int requestCode) {
+
+                }
+            });
+            controller.getResourceMenu(userId);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
     }
 
 //    private void getIncentiveDetails() {
@@ -968,11 +1084,11 @@
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        /*try {
+        try {
             mCameraManager.setTorchMode(mCameraId, false);
         } catch (CameraAccessException e) {
             e.printStackTrace();
-        }*/
+        }
         AppUtils.IS_FLASH_ON = true;
         mActivityHomeBinding.toolbar.imgFlash.setImageResource(R.drawable.flash_off);
     }
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n\r\n    ext {\r\n        kotlin_version = '1.5.0'\r\n    }\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n//        maven { url \"http://jcenter.bintray.com\"}\r\n\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.1'\r\n//        classpath \"io.realm:realm-gradle-plugin:2.2.1\"\r\n        classpath \"io.realm:realm-gradle-plugin:6.0.2\"\r\n        classpath 'com.google.gms:google-services:4.2.0'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url \"https://jitpack.io\"\r\n        }\r\n        maven {\r\n            url 'https://maven.google.com/'\r\n            name 'Google'\r\n        }\r\n        maven {\r\n            url \"https://mint.splunk.com/gradle/\"\r\n        }\r\n//        flatDir {\r\n//            dirs 'libs'\r\n//        }\r\n\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ build.gradle	(date 1630384719663)
@@ -12,7 +12,7 @@
 
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.0.1'
+        classpath 'com.android.tools.build:gradle:4.2.2'
 //        classpath "io.realm:realm-gradle-plugin:2.2.1"
         classpath "io.realm:realm-gradle-plugin:6.0.2"
         classpath 'com.google.gms:google-services:4.2.0'
Index: app/src/main/res/layout/fragment_referral.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n\r\n        <import type=\"android.view.View\" />\r\n\r\n        <variable\r\n            name=\"handler\"\r\n            type=\"com.ab.hicarerun.handler.UserReferralClickHandler\" />\r\n\r\n        <variable\r\n            name=\"model\"\r\n            type=\"com.ab.hicarerun.viewmodel.ReferralViewModel\" />\r\n    </data>\r\n\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/white\"\r\n        tools:context=\".fragments.ReferralFragment\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"0.3dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@color/black\" />\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/lnrOrder\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"40dp\"\r\n                android:background=\"@color/tab_textColor\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/txtOrder\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"36dp\"\r\n                    android:text=\"@string/add_customer_referrals\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/lnrAddJobCard\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_marginRight=\"36dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:onClick=\"@{(view) -> handler.onAddReferralClicked(view)}\">\r\n\r\n                    <Button\r\n                        android:id=\"@+id/btnCheckList\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"26dp\"\r\n                        android:layout_alignParentRight=\"true\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:layout_marginRight=\"15dp\"\r\n                        android:layout_toLeftOf=\"@id/btnPaymentJeopardy\"\r\n                        android:background=\"@drawable/button_background\"\r\n                        android:text=\"Refer HiCare\"\r\n                        android:onClick=\"@{(view) -> handler.onAddReferralClicked(view)}\"\r\n                        android:textAllCaps=\"false\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"9sp\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"22dp\"\r\n                        android:layout_height=\"22dp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        app:srcCompat=\"@drawable/ic_add\" />\r\n\r\n\r\n\r\n\r\n                </LinearLayout>\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"0.3dp\"\r\n                android:background=\"@color/black\" />\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@color/white\">\r\n\r\n                <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n                    android:id=\"@+id/swipeRefreshLayout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    >\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/recycleView\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_alignParentStart=\"true\"\r\n                        android:layout_alignParentLeft=\"true\"\r\n                        android:layout_alignParentTop=\"true\" />\r\n\r\n\r\n                </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/emptyTask\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:gravity=\"center\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"270dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:adjustViewBounds=\"true\"\r\n                        android:scaleType=\"centerCrop\"\r\n                        android:src=\"@drawable/empty_tasks\" />\r\n\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"@string/nothing\"\r\n                        android:textSize=\"30sp\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"10dp\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"@string/your_referral_list_is_empty\" />\r\n\r\n                </LinearLayout>\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/fab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"bottom|end\"\r\n            android:layout_margin=\"10sp\"\r\n            android:clickable=\"true\"\r\n            android:onClick=\"@{(view) -> handler.onAddReferralClicked(view)}\"\r\n            app:srcCompat=\"@drawable/ic_add\"\r\n            android:tint=\"@color/white\"\r\n            android:visibility=\"gone\" />\r\n\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:id=\"@+id/btnReferHicare\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"38dp\"\r\n            android:visibility=\"gone\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginLeft=\"120dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_marginRight=\"120dp\"\r\n            android:layout_marginBottom=\"30dp\"\r\n            android:background=\"@drawable/button_background\"\r\n            android:clickable=\"true\"\r\n            android:text=\"Refer HiCare\"\r\n            android:onClick=\"@{(view) -> handler.onAddReferralClicked(view)}\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/white\" />\r\n\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_referral.xml	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ app/src/main/res/layout/fragment_referral.xml	(date 1630388221016)
@@ -66,14 +66,14 @@
                         android:layout_height="26dp"
                         android:layout_alignParentRight="true"
                         android:layout_centerVertical="true"
-                        android:layout_marginRight="15dp"
+                        android:layout_marginRight="17dp"
                         android:layout_toLeftOf="@id/btnPaymentJeopardy"
                         android:background="@drawable/button_background"
                         android:text="Refer HiCare"
-                        android:onClick="@{(view) -> handler.onAddReferralClicked(view)}"
+                        android:onClick="@{(view) -> handler.onReferHiCareClicked(view)}"
                         android:textAllCaps="false"
                         android:textColor="@color/white"
-                        android:textSize="9sp" />
+                        android:textSize="11sp" />
 
                     <ImageView
                         android:layout_width="22dp"
Index: app/src/main/res/layout/activity_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <data>\r\n\r\n        <import type=\"android.view.View\" />\r\n    </data>\r\n\r\n\r\n    <androidx.drawerlayout.widget.DrawerLayout\r\n        android:id=\"@+id/drawer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/white\"\r\n        >\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@color/white\"\r\n            android:orientation=\"vertical\">\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/layoutTool\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <include\r\n                    android:id=\"@+id/customToolbar\"\r\n                    layout=\"@layout/layout_toolbar\" />\r\n\r\n                <include\r\n                    android:id=\"@+id/toolbar\"\r\n                    layout=\"@layout/layout_custom_toolbar\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n            <!--<androidx.appcompat.widget.Toolbar-->\r\n            <!--android:id=\"@+id/toolbar\"-->\r\n            <!--android:layout_width=\"match_parent\"-->\r\n            <!--android:layout_height=\"?attr/actionBarSize\"-->\r\n            <!--android:background=\"?attr/colorPrimary\"-->\r\n            <!--android:minHeight=\"?attr/actionBarSize\"-->\r\n            <!--style=\"@style/ToolBarStyle.Event\"-->\r\n            <!--/>-->\r\n\r\n\r\n            <FrameLayout\r\n                android:id=\"@+id/container\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_above=\"@id/relCoin\"\r\n                android:layout_below=\"@id/layoutTool\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:layout_alignParentRight=\"true\"\r\n                android:layout_marginTop=\"0dp\"\r\n                android:layout_marginEnd=\"0dp\"\r\n                android:layout_marginRight=\"0dp\"\r\n                android:layout_marginBottom=\"0dp\"\r\n                android:background=\"@color/white\" />\r\n\r\n            <View\r\n                android:id=\"@+id/navigationBorder\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"4dp\"\r\n                android:layout_above=\"@id/relBottom\"\r\n                android:background=\"@drawable/today_rect\" />\r\n\r\n            <!--            <com.google.android.material.bottomnavigation.BottomNavigationView-->\r\n            <!--                android:id=\"@+id/bottom_navigation\"-->\r\n            <!--                android:layout_width=\"match_parent\"-->\r\n            <!--                android:layout_height=\"wrap_content\"-->\r\n            <!--                android:layout_gravity=\"bottom\"-->\r\n            <!--                android:layout_alignParentBottom=\"true\"-->\r\n            <!--                android:background=\"@color/white\"-->\r\n            <!--                android:visibility=\"gone\"-->\r\n            <!--                app:itemIconTint=\"@drawable/selector\"-->\r\n            <!--                app:itemTextColor=\"@drawable/selector\"-->\r\n            <!--                app:labelVisibilityMode=\"labeled\"-->\r\n            <!--                app:layout_behavior=\"@string/hide_bottom_view_on_scroll_behavior\"-->\r\n            <!--                app:menu=\"@menu/bottom_navigation_menu\" />-->\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/relBottom\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_alignParentBottom=\"true\">\r\n\r\n                <com.ab.hicarerun.utils.CustomBottomNavigation\r\n                    android:id=\"@+id/custom_navigation\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_alignParentBottom=\"true\"\r\n                    app:itemBackground=\"@color/colorPrimary\"\r\n                    app:itemIconTint=\"@drawable/selector\"\r\n                    app:itemTextColor=\"@drawable/selector\"\r\n                    app:labelVisibilityMode=\"labeled\"\r\n                    app:layout_behavior=\"@string/hide_bottom_view_on_scroll_behavior\"\r\n                    app:menu=\"@menu/bottom_navigation_menu\" />\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/relCoin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:background=\"@drawable/circle\">\r\n\r\n                <!--                <zone.com.lightsweep.ShineImageView-->\r\n                <!--                    android:id=\"@+id/img\"-->\r\n                <!--                    android:layout_width=\"30dp\"-->\r\n                <!--                    android:layout_height=\"30dp\"-->\r\n                <!--                    android:src=\"@drawable/customer_marker\"-->\r\n                <!--                    app:reflectionColor=\"@color/yellow\"-->\r\n                <!--                    app:reflectionRorate=\"30\"-->\r\n                <!--                    android:layout_centerInParent=\"true\"-->\r\n                <!--                    app:reflectionWidth=\"100\" />-->\r\n\r\n                <com.facebook.shimmer.ShimmerFrameLayout\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    app:shimmer_base_alpha=\"0.9\"\r\n                    app:shimmer_base_color=\"@color/white\"\r\n                    app:shimmer_clip_to_children=\"true\"\r\n                    app:shimmer_duration=\"1500\"\r\n                    app:shimmer_highlight_color=\"@color/white\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/img\"\r\n                        android:layout_width=\"30dp\"\r\n                        android:layout_height=\"30dp\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:alpha=\"1\"\r\n                        app:srcCompat=\"@drawable/ic_rupee\" />\r\n\r\n                </com.facebook.shimmer.ShimmerFrameLayout>\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n            <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n                android:id=\"@+id/fab\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:clickable=\"true\"\r\n                android:focusable=\"true\"\r\n                android:visibility=\"gone\"\r\n                app:elevation=\"0dp\"\r\n                app:maxImageSize=\"30dp\"\r\n                app:srcCompat=\"@drawable/ic_rupee\" />\r\n\r\n            <com.luseen.spacenavigation.SpaceNavigationView\r\n                android:id=\"@+id/bottom_navigation\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:background=\"@color/transparent\"\r\n                android:visibility=\"gone\"\r\n                app:active_centre_button_icon_color=\"@color/white\"\r\n                app:active_item_color=\"@color/yelold\"\r\n                app:centre_button_color=\"@color/yelold\"\r\n                app:centre_button_icon=\"@drawable/ic_trophy\"\r\n                app:inactive_centre_button_icon_color=\"@color/colorAccentDrawerPrimaryLightest\"\r\n                app:inactive_item_color=\"@color/white\"\r\n                app:layout_behavior=\"com.luseen.spacenavigation.SpaceNavigationViewBehavior\"\r\n                app:space_background_color=\"@color/colorPrimary\"\r\n                app:space_item_icon_only_size=\"25dp\"\r\n                app:space_item_icon_size=\"20dp\"\r\n                app:space_item_text_size=\"@dimen/space_item_text_default_size\" />\r\n\r\n        </RelativeLayout>\r\n\r\n        <com.google.android.material.navigation.NavigationView\r\n            android:id=\"@+id/navigation_view\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_gravity=\"start\"\r\n            android:background=\"@color/white\"\r\n            app:headerLayout=\"@layout/header_nav\"\r\n            app:menu=\"@menu/drawermenu\"\r\n            />\r\n    </androidx.drawerlayout.widget.DrawerLayout>\r\n\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_home.xml	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ app/src/main/res/layout/activity_home.xml	(date 1631097019799)
@@ -190,7 +190,6 @@
             android:layout_gravity="start"
             android:background="@color/white"
             app:headerLayout="@layout/header_nav"
-            app:menu="@menu/drawermenu"
             />
     </androidx.drawerlayout.widget.DrawerLayout>
 
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Fri Feb 26 16:20:21 IST 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1630384719616)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-all.zip
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\r\n    repositories {\r\n        maven { url 'https://plugins.gradle.org/m2/' }\r\n    }\r\n    dependencies {\r\n        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:0.12.6'\r\n    }\r\n}\r\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\r\n\r\nrepositories {\r\n    maven { url 'https://maven.google.com' }\r\n}\r\n\r\napply plugin: 'com.android.application'\r\napply plugin: 'realm-android'\r\n\r\nandroid {\r\n    compileSdkVersion 31\r\n    defaultConfig {\r\n        applicationId \"com.ab.hicarerun\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 31\r\n        versionCode 61\r\n        versionName \"7.4\"\r\n        multiDexEnabled true\r\n//        dynamicFeatures = [\":ondemand\"]\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        manifestPlaceholders = [\r\n                onesignal_app_id               : '388766c1-4dc5-4e4d-a206-9b4f583d5d9d',\r\n                // Project number pulled f;prom dashboard, local value is ignored.\r\n                onesignal_google_project_number: 'REMOTE'\r\n        ]\r\n    }\r\n    buildTypes {\r\n        release {\r\n            debuggable false\r\n            minifyEnabled true\r\n            shrinkResources false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n\r\n        debug {\r\n            debuggable true\r\n            minifyEnabled true\r\n            shrinkResources false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    lintOptions {\r\n        quiet true\r\n        abortOnError false\r\n        ignoreWarnings true\r\n        checkReleaseBuilds false\r\n    }\r\n\r\n    dataBinding {\r\n        enabled = true\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = '1.8'\r\n        targetCompatibility = '1.8'\r\n    }\r\n    defaultConfig {\r\n        vectorDrawables.useSupportLibrary = true\r\n    }\r\n//    dynamicFeatures = [\":LanguageModule\", \":MarathiLanguage\"]\r\n\r\n    bundle {\r\n        language {\r\n            enableSplit = false\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    api 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    api 'androidx.legacy:legacy-support-v4:1.0.0'\r\n//    compile(name: 'ezetapandroidsdk_2_0', ext: 'aar')\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    api 'androidx.appcompat:appcompat:1.2.0'\r\n//    api 'com.google.android.material:material:1.1.0'\r\n    api 'com.google.android.material:material:1.4.0-alpha02'\r\n    api 'com.scwang.wave:MultiWaveHeader:1.0.0-alpha-1'\r\n    api 'net.igenius:customcheckbox:1.3'\r\n    //    implementation 'uk.co.chrisjenx:calligraphy:2.2.0'\r\n    api 'androidx.multidex:multidex:2.0.1'\r\n    api 'com.squareup.retrofit2:retrofit:2.5.0'\r\n    api 'com.squareup.retrofit2:converter-gson:2.5.0'\r\n    api 'com.squareup.okhttp3:logging-interceptor:3.12.0'\r\n    api 'com.squareup.okhttp3:okhttp:3.12.1'\r\n    api 'com.google.android.gms:play-services-maps:17.0.0'\r\n    api 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.github.lzyzsd:circleprogress:1.2.1'\r\n    api 'com.google.android.play:core:1.10.0'\r\n    api 'androidx.slice:slice-builders:1.1.0-alpha02'\r\n    api 'com.sothree.slidinguppanel:library:3.4.0'\r\n    api 'com.squareup.picasso:picasso:2.71828'\r\n    api 'io.github.inflationx:calligraphy3:3.1.1'\r\n    api 'io.github.inflationx:viewpump:2.0.3'\r\n    api 'design.ivisionblog.apps:feedback-dialog:0.0.1-alpha'\r\n    api 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    api 'com.makeramen:roundedimageview:2.3.0'\r\n//    implementation 'com.ramijemli.percentagechartview:percentagechartview:0.3.1'\r\n    //    implementation('com.onesignal:OneSignal:[3.11.4, 3.99.99]') {\r\n//        exclude group: 'com.google.android.gms'\r\n//    }\r\n    api 'com.onesignal:OneSignal:3.15.7'\r\n    api 'com.orhanobut:logger:2.2.0'\r\n    api 'com.github.jrvansuita:PickImage:+'\r\n    //    implementation 'com.github.bumptech.glide:glide:4.9.0'\r\n    api 'com.github.deano2390:MaterialShowcaseView:1.3.4@aar'\r\n    implementation 'com.github.GrenderG:Toasty:1.5.0'\r\n    api 'hyogeun.github.com.colorratingbar:ColorRatingBar:1.0.1'\r\n    api 'com.github.mukeshsolanki:android-otpview-pinview:2.0.3'\r\n    api \"com.splunk.mint:mint:5.0.0\"\r\n    api 'com.clock.scratch:Scratch:1.0.0'\r\n    api 'de.hdodenhof:circleimageview:3.1.0'\r\n    api 'com.github.bumptech.glide:glide:4.11.0'\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'\r\n    api 'com.bogdwellers:pinchtozoom:0.1'\r\n    api 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'\r\n    // ExoPlayer\r\n    api 'com.google.android.exoplayer:exoplayer:2.8.4' // 2.9.0 has min sdk 26\r\n    // lib for SMS verification (Phone Auth)\r\n    api 'com.google.android.gms:play-services-base:17.6.0'\r\n    api 'com.google.android.gms:play-services-identity:17.0.0'\r\n    api 'com.google.android.gms:play-services-auth:19.0.0'\r\n    api 'com.google.android.gms:play-services-auth-api-phone:17.5.0'\r\n    api 'com.github.armcha:SpaceNavigationView:1.6.0'\r\n    api 'com.karumi:dexter:5.0.0'\r\n    api 'com.waynell.library:drop-animation-view:1.0'\r\n    api 'com.facebook.shimmer:shimmer:0.5.0'\r\n    api 'pl.droidsonroids.gif:android-gif-drawable:1.1.0'\r\n    api 'com.google.android:flexbox:1.1.0'\r\n    api 'org.apmem.tools:layouts:1.10@aar'\r\n\r\n    implementation 'com.eyalbira.loadingdots:loading-dots:1.0.2'\r\n\r\n    //QR code\r\n    implementation 'com.google.zxing:core:3.4.0'\r\n    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'\r\n    implementation 'com.github.hsmnzaydn:imagezoom:1.4.0'\r\n    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.1'\r\n\r\n    implementation 'nl.dionsegijn:konfetti:1.3.2'\r\n\r\n    //dynamic module injection\r\n//    api 'com.google.android.play:core:1.7.1'\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n}\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'kotlin-android'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision c94268a07690d0e9b61580f98c6ec3f814d5d414)
+++ app/build.gradle	(date 1630387543065)
@@ -16,11 +16,11 @@
 apply plugin: 'realm-android'
 
 android {
-    compileSdkVersion 31
+    compileSdkVersion 30
     defaultConfig {
         applicationId "com.ab.hicarerun"
         minSdkVersion 21
-        targetSdkVersion 31
+        targetSdkVersion 30
         versionCode 61
         versionName "7.4"
         multiDexEnabled true
